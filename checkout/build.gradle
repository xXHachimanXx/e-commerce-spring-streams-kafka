plugins {
	id 'org.springframework.boot' version '2.4.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.commercehub.gradle.plugin.avro" version "0.99.99"
}

apply plugin: "com.commercehub.gradle.plugin.avro"

group = 'com.hachiman.ecommerce-spring-streams-kafka'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		url 'http://packages.confluent.io/maven/'
	}
}

ext {
	set('springCloudVersion', "Hoxton.SR6")
	set('cucumberVersion', '6.6.0')
	set('testContainersVersion', '1.14.3')
	set('wireMockVersion', '2.27.2')
	set('springCloudVersion', "2020.0.1")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springframework.cloud:spring-cloud-stream'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka-streams'
    implementation 'org.projectlombok:lombok:1.18.16'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation "org.testcontainers:postgresql:${testContainersVersion}"
	compile "org.apache.avro:avro:1.10.1"
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.data:spring-data-envers'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'
	implementation 'io.confluent:kafka-avro-serializer:5.5.0'
	runtimeOnly 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-support'
	testImplementation "io.cucumber:cucumber-spring:${cucumberVersion}"
	testImplementation "io.cucumber:cucumber-java:${cucumberVersion}"
	testImplementation "io.cucumber:cucumber-junit:${cucumberVersion}"
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation "org.testcontainers:testcontainers:${testContainersVersion}"
	testImplementation "org.testcontainers:kafka:${testContainersVersion}"
	testImplementation "org.testcontainers:postgresql:${testContainersVersion}"
	testImplementation "com.github.tomakehurst:wiremock:${wireMockVersion}"
	testImplementation "org.springframework.cloud:spring-cloud-contract-wiremock"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


test {
	useJUnitPlatform()
}

avro {
	fieldVisibility = "PRIVATE"
}

generateAvroJava {
	source 'src/main/resources/avro'
}

generateTestAvroJava {
	source 'src/main/resources/avro'
}

